package dns

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v2ray_core_common_net "v2ray.com/core/common/net"
import v2ray_core_common_net2 "v2ray.com/core/common/net"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Config struct {
	// Nameservers used by this DNS. Only traditional UDP servers are support at the moment.
	// A special value 'localhost' as a domain address can be set to use DNS on local system.
	NameServers []*v2ray_core_common_net2.Endpoint `protobuf:"bytes,1,rep,name=NameServers" json:"NameServers,omitempty"`
	// Static hosts. Domain to IP.
	Hosts map[string]*v2ray_core_common_net.IPOrDomain `protobuf:"bytes,2,rep,name=Hosts" json:"Hosts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetNameServers() []*v2ray_core_common_net2.Endpoint {
	if m != nil {
		return m.NameServers
	}
	return nil
}

func (m *Config) GetHosts() map[string]*v2ray_core_common_net.IPOrDomain {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "v2ray.core.app.dns.Config")
}

func init() { proto.RegisterFile("v2ray.com/core/app/dns/config.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0xcd, 0x4a, 0x03, 0x31,
	0x10, 0x80, 0xd9, 0x2d, 0x2d, 0x98, 0xbd, 0x48, 0x0e, 0xb2, 0xf4, 0x62, 0x55, 0xc4, 0x82, 0x30,
	0x81, 0xf5, 0xa0, 0xe8, 0x41, 0xfa, 0x07, 0x7a, 0xd1, 0xb2, 0x82, 0x07, 0x3d, 0xc5, 0x4d, 0x94,
	0x45, 0x33, 0x13, 0x92, 0x58, 0xd8, 0x57, 0xf2, 0xbd, 0x7c, 0x0f, 0xd9, 0x0d, 0x62, 0x51, 0x7b,
	0x0b, 0xe1, 0xfb, 0x32, 0x5f, 0x86, 0x1d, 0xac, 0x0a, 0x27, 0x1b, 0xa8, 0xc8, 0x88, 0x8a, 0x9c,
	0x16, 0xd2, 0x5a, 0xa1, 0xd0, 0x8b, 0x8a, 0xf0, 0xb9, 0x7e, 0x01, 0xeb, 0x28, 0x10, 0xe7, 0xdf,
	0x90, 0xd3, 0x20, 0xad, 0x05, 0x85, 0x7e, 0x78, 0xf4, 0x4b, 0xac, 0xc8, 0x18, 0x42, 0x81, 0x3a,
	0x08, 0xa9, 0x94, 0xd3, 0xde, 0x47, 0x79, 0x78, 0xbc, 0x19, 0x54, 0xda, 0x87, 0x1a, 0x65, 0xa8,
	0x09, 0x23, 0xbc, 0xff, 0x99, 0xb0, 0xc1, 0xac, 0x1b, 0xcd, 0x27, 0x2c, 0xbb, 0x91, 0x46, 0xdf,
	0x69, 0xb7, 0xd2, 0xce, 0xe7, 0xc9, 0xa8, 0x37, 0xce, 0x8a, 0x5d, 0x58, 0x4b, 0x89, 0x2f, 0x01,
	0xea, 0x00, 0x0b, 0x54, 0x96, 0x6a, 0x0c, 0xe5, 0xba, 0xc3, 0x2f, 0x58, 0xff, 0x8a, 0x7c, 0xf0,
	0x79, 0xda, 0xc9, 0x87, 0xf0, 0xf7, 0x1f, 0x10, 0xa7, 0x41, 0xc7, 0x2d, 0x30, 0xb8, 0xa6, 0x8c,
	0xce, 0xf0, 0x91, 0xb1, 0x9f, 0x4b, 0xbe, 0xcd, 0x7a, 0xaf, 0xba, 0xc9, 0x93, 0x51, 0x32, 0xde,
	0x2a, 0xdb, 0x23, 0x3f, 0x65, 0xfd, 0x95, 0x7c, 0x7b, 0xd7, 0x79, 0x3a, 0x4a, 0xc6, 0x59, 0xb1,
	0xb7, 0xa1, 0xec, 0x7a, 0x79, 0xeb, 0xe6, 0x64, 0x64, 0x8d, 0x65, 0xe4, 0xcf, 0xd3, 0xb3, 0x64,
	0x7a, 0xc9, 0x76, 0x2a, 0x32, 0xff, 0xf4, 0x4c, 0xb3, 0x18, 0xb4, 0x6c, 0xd7, 0xf1, 0xd0, 0x53,
	0xe8, 0x3f, 0x52, 0x7e, 0x5f, 0x94, 0xb2, 0x81, 0x59, 0x8b, 0x4d, 0xac, 0x85, 0x39, 0xfa, 0xa7,
	0x41, 0xb7, 0xaf, 0x93, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x18, 0xf5, 0xa2, 0xc0, 0x01,
	0x00, 0x00,
}
